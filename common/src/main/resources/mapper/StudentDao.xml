<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.common.common.postgressql.dao.StudentDao">

    <resultMap type="com.common.common.postgressql.entity.Student" id="StudentMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="studentName" column="student_name" jdbcType="VARCHAR"/>
        <result property="schoolId" column="school_id" jdbcType="INTEGER"/>
    </resultMap>


    <resultMap id="studentDTO" type="com.common.common.postgressql.entity.dto.StudentDTO">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="studentName" column="student_name" jdbcType="VARCHAR"/>
        <association property="school" javaType="com.common.common.postgressql.entity.School">
            <result property="id" column="school_id"/>
            <result property="schoolName" column="school_name"/>
        </association>
        <collection property="subjectList" ofType="com.common.common.postgressql.entity.Subject">
            <result property="id" column="subject_id"/>
            <result property="subjectName" column="subject_name"/>
        </collection>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="StudentMap">
        select
          id, student_name, school_id
        from public.student
        where id = #{id}
    </select>


    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="studentDTO">
        SELECT
        st."id" as id,
        st.student_name as student_name,
        sc."id" as school_id,
        sc.school_name as school_name,
        su."id" as subject_id,
        su.subject_name as subject_name
        FROM
        student st
        LEFT JOIN school sc ON sc."id" = st.school_id
        LEFT JOIN student_subject ss ON ss.student_id = st."id"
        LEFT JOIN subject su ON su."id" = ss.subject_id
    </select>


    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="StudentMap">
        select
        id, student_name, school_id
        from public.student
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="studentName != null and studentName != ''">
                and student_name = #{studentName}
            </if>
            <if test="schoolId != null">
                and school_id = #{schoolId}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into public.student(student_name, school_id)
        values (#{studentName}, #{schoolId})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into public.student(student_name, school_id)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.studentName}, #{entity.schoolId})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into public.student(student_name, school_id)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.studentName}, #{entity.schoolId})
        </foreach>
        on duplicate key update
        student_name = values(student_name) , school_id = values(school_id)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update public.student
        <set>
            <if test="studentName != null and studentName != ''">
                student_name = #{studentName},
            </if>
            <if test="schoolId != null">
                school_id = #{schoolId},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from public.student where id = #{id}
    </delete>

</mapper>

