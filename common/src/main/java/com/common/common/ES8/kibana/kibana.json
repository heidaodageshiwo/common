# Click the Variables button, above, to create your own variables.
GET ${exampleVariable1} // _search
{
"query": {
"${exampleVariable2}": {} // match_all
}
}
GET /a/_settings?pretty

GET _cluster/health

GET /

PUT twitter/_doc/1
{
"user": "GB",
"uid": 1,
"city": "Beijing",
"province": "Beijing",
"country": "China"
}

GET twitter/_mapping
PUT test
{
"mappings": {
"properties": {
"id": {
"type": "keyword"
},
"message": {
"type": "text"
}
}
}
}
PUT test/_mapping
{
"properties": {
"age": {
"type": "long"
}
}
}
GET test/_mapping


PUT twitter/_doc/1?op_type=create
{
"user": "双榆树-张三",
"message": "今儿天气不错啊，出去转转去",
"uid": 2,
"age": 20,
"city": "北京",
"province": "北京",
"country": "中国",
"address": "中国北京市海淀区",
"location": {
"lat": "39.970718",
"lon": "116.325747"
}
}

GET twitter/_doc/1

GET twitter/_source/1

POST my_index/_doc
{
"content": "this is really cool"
}
POST my_index/_doc?replication=async
{
"content": "this is really cool"
}
GET twitter/_doc/1/_source

GET twitter/_doc/1?_source=city,age,province

GET _mget
{
"docs": [
{
"_index": "twitter",
"_id": 1
},
{
"_index": "twitter",
"_id": 2
}
]
}


PUT twitter/_doc/1
{
"user": "GB",
"uid": 1,
"city": "北京",
"province": "北京",
"country": "中国",
"location":{
"lat":"29.084661",
"lon":"111.335210"
}
}
POST twitter/_update/1
{
"doc": {
"city": "成都",
"province": "四川"
}
}

POST twitter/_update_by_query
{
"query": {
"match": {
"user": "GB"
}
},
"script": {
"source": "ctx._source.city = params.city;ctx._source.province = params.province;ctx._source.country = params.country",
"lang": "painless",
"params": {
"city": "上海",
"province": "上海",
"country": "中国"
}
}
}

POST twitter/_update/1
{
"script" : {
"source": "ctx._source.city=params.city",
"lang": "painless",
"params": {
"city": "长沙"
}
}
}

POST /catalog/_update/3
{
"doc": {
"author": "Albert Paro",
"title": "Elasticsearch 5.0 Cookbook",
"description": "Elasticsearch 5.0 Cookbook Third Edition",
"price": "54.99"
},
"doc_as_upsert": true
}


POST _bulk
{ "index" : { "_index" : "twitter", "_id": 1} }
{"user":"双榆树-张三","message":"今儿天气不错啊，出去转转去","uid":2,"age":20,"city":"北京","province":"北京","country":"中国","address":"中国北京市海淀区","location":{"lat":"39.970718","lon":"116.325747"}}
{ "index" : { "_index" : "twitter", "_id": 2 }}
{"user":"东城区-老刘","message":"出发，下一站云南！","uid":3,"age":30,"city":"北京","province":"北京","country":"中国","address":"中国北京市东城区台基厂三条3号","location":{"lat":"39.904313","lon":"116.412754"}}
{ "index" : { "_index" : "twitter", "_id": 3} }
{"user":"东城区-李四","message":"happy birthday!","uid":4,"age":30,"city":"北京","province":"北京","country":"中国","address":"中国北京市东城区","location":{"lat":"39.893801","lon":"116.408986"}}
{ "index" : { "_index" : "twitter", "_id": 4} }
{"user":"朝阳区-老贾","message":"123,gogogo","uid":5,"age":35,"city":"北京","province":"北京","country":"中国","address":"中国北京市朝阳区建国门","location":{"lat":"39.718256","lon":"116.367910"}}
{ "index" : { "_index" : "twitter", "_id": 5} }
{"user":"朝阳区-老王","message":"Happy BirthDay My Friend!","uid":6,"age":50,"city":"北京","province":"北京","country":"中国","address":"中国北京市朝阳区国贸","location":{"lat":"39.918256","lon":"116.467910"}}
{ "index" : { "_index" : "twitter", "_id": 6} }
{"user":"虹桥-老吴","message":"好友来了都今天我生日，好友来了,什么 birthday happy 就成!","uid":7,"age":90,"city":"上海","province":"上海","country":"中国","address":"中国上海市闵行区","location":{"lat":"31.175927","lon":"121.383328"}}


POST twitter/_search



GET twitter/_search?size=2&from=2




DELETE twitter

PUT twitter
{
"mappings": {
"properties": {
"DOB": {
"type": "date"
},
"address": {
"type": "text",
"fields": {
"keyword": {
"type": "keyword",
"ignore_above": 256
}
}
},
"age": {
"type": "long"
},
"city": {
"type": "keyword"
},
"country": {
"type": "keyword"
},
"location": {
"type": "geo_point"
},
"message": {
"type": "text",
"fields": {
"keyword": {
"type": "keyword",
"ignore_above": 256
}
}
},
"province": {
"type": "keyword"
},
"uid": {
"type": "long"
},
"user": {
"type": "text",
"fields": {
"keyword": {
"type": "keyword",
"ignore_above": 256
}
}
}
}
}
}


POST _bulk
{"index":{"_index":"twitter","_id":1}}
{"user":"张三","message":"今儿天气不错啊，出去转转去","uid":2,"age":20,"city":"北京","province":"北京","country":"中国","address":"中国北京市海淀区","location":{"lat":"39.970718","lon":"116.325747"}, "DOB": "1999-04-01"}
{"index":{"_index":"twitter","_id":2}}
{"user":"老刘","message":"出发，下一站云南！","uid":3,"age":22,"city":"北京","province":"北京","country":"中国","address":"中国北京市东城区台基厂三条3号","location":{"lat":"39.904313","lon":"116.412754"}, "DOB": "1997-04-01"}
{"index":{"_index":"twitter","_id":3}}
{"user":"李四","message":"happy birthday!","uid":4,"age":25,"city":"北京","province":"北京","country":"中国","address":"中国北京市东城区","location":{"lat":"39.893801","lon":"116.408986"}, "DOB": "1994-04-01"}
{"index":{"_index":"twitter","_id":4}}
{"user":"老贾","message":"123,gogogo","uid":5,"age":30,"city":"北京","province":"北京","country":"中国","address":"中国北京市朝阳区建国门","location":{"lat":"39.718256","lon":"116.367910"}, "DOB": "1989-04-01"}
{"index":{"_index":"twitter","_id":5}}
{"user":"老王","message":"Happy BirthDay My Friend!","uid":6,"age":26,"city":"北京","province":"北京","country":"中国","address":"中国北京市朝阳区国贸","location":{"lat":"39.918256","lon":"116.467910"}, "DOB": "1993-04-01"}
{"index":{"_index":"twitter","_id":6}}
{"user":"老吴","message":"好友来了都今天我生日，好友来了,什么 birthday happy 就成!","uid":7,"age":28,"city":"上海","province":"上海","country":"中国","address":"中国上海市闵行区","location":{"lat":"31.175927","lon":"121.383328"}, "DOB": "1991-04-01"}

GET twitter/_field_caps?fields=country

GET twitter/_search
{
"size": 0,
"aggs": {
"age": {
"range": {
"field": "age",
"ranges": [
{
"from": 20,
"to": 22
},
{
"from": 22,
"to": 25
},
{
"from": 25,
"to": 30
}
]
}
}
}
}


GET twitter/_search
{
"size": 0,
"aggs": {
"by_cities": {
"filters": {
"filters": {
"beijing": {
"match": {
"city": "北京"
}
},
"shanghai": {
"match": {
"city": "上海"
}
}
}
}
}
}
}



GET twitter/_analyze
{
"text": [
"Happy Birthday"
],
"analyzer": "standard"
}



PUT test1
{
"mappings": {
"properties": {
"id": {
"type": "keyword"
},
"message": {
"type": "text"
}
}
}
}

PUT test1/_doc/1
{
"id": "1234",
"message": "This is so lovely"
}




PUT my-index-000001/_doc/1?routing=user1&refresh=true
{
"title": "This is a document"
}

GET my-index-000001/_doc/1?routing=user1


GET my-index-000001/_search?filter_path=**.hits
{
"query": {
"terms": {
"_routing": [ "user1" ]
}
}
}

GET my-index-000001/_search?routing=user1,user2
{
"query": {
"match": {
"title": "document"
}
}
}


PUT my-index-000002
{
"mappings": {
"_routing": {
"required": true
}
}
}

PUT my-index-000002/_doc/1
{
"text": "No routing value provided"
}



PUT index_1/_doc/1
{
"text": "Document in index 1"
}

PUT index_2/_doc/2?refresh=true
{
"text": "Document in index 2"
}

GET index_1,index_2/_search
{
"query": {
"terms": {
"_tier": ["data_hot", "data_warm"]
}
}
}


PUT my_index1
{
"mappings": {
"properties": {
"title": {
"type": "text",
"store": true
},
"date": {
"type": "date",
"store": true
},
"content": {
"type": "text"
}
}
}
}


PUT my_index1/_doc/1
{
"title": "Some short title",
"date": "2015-01-01",
"content": "A very long content field..."
}

GET my_index1/_search

GET my_index1/_search
{
"_source": ["title", "date"]
}

GET my_index1/_search
{
"stored_fields": [
"title",
"date"
]
}

PUT developers/_doc/1
{
"name": {
"firstname": "san",
"secondname": "zhang"
},
"age": 20,
"city": "Beijing",
"skills": ["Java", "C++"],
"DOB": "1988-06-04"
}

PUT developers/_doc/2
{
"name": {
"firstname": "si",
"secondname": "li"
},
"age": 30,
"city": "Shanghai",
"skills": ["Ruby", "C++"],
"DOB": "1999-07-08"
}

GET developers/_mapping

GET developers/_search
{
"query": {
"match": {
"city": "Beijing"
}
},
"fields": [
"name.firstname",
"ski*",
"nianling",
"city",
{
"field": "DOB",
"format": "epoch_millis"
}
]
}


PUT my-index-0000011
{
"mappings": {
"properties": {
"group" : { "type" : "keyword" },
"user": {
"type": "nested",
"properties": {
"first" : { "type" : "keyword" },
"last" : { "type" : "keyword" }
}
}
}
}
}

PUT my-index-0000011/_doc/1?refresh=true
{
"group" : "fans",
"user" : [
{
"first" : "John",
"last" :  "Smith"
},
{
"first" : "Alice",
"last" :  "White"
}
]
}

POST my-index-0000011/_search
{
"fields": ["*"],
"_source": false
}

POST my-index-0000011/_search
{
"fields": ["user.first"],
"_source": false
}

PUT developers/_doc/1
{
"name": {
"firstname": "san",
"secondname": "zhang"
},
"age": 20,
"city": "Beijing",
"skills": ["Java", "C++"],
"DOB": "1988-06-04"
}

PUT developers/_doc/2
{
"name": {
"firstname": "si",
"secondname": "li"
},
"age": 30,
"city": "Shanghai",
"skills": ["Ruby", "C++"],
"DOB": "1999-07-08"
}

//以下搜索请求使用 docvalue_fields 参数检索 age 字段，以 ski*开头的所有字段以及 DOB 字段的 doc value：

GET developers/_search
{
"query": {
"match": {
"city": "Beijing"
}
},
"docvalue_fields": [
"age",
"ski*.keyword",
{
"field": "date",
"format": "epoch_millis"
}
]
}



PUT my_index2
{
"mappings": {
"properties": {
"title": {
"type": "text",
"store": true
},
"date": {
"type": "date",
"store": true
},
"content": {
"type": "text"
},
"city": {
"type": "keyword"
}
}
}
}

PUT my_index2/_doc/1
{
"title": "Some short title",
"date": "2015-01-01",
"content": "A very long content field...",
"city": "Beijing"
}


GET my_index2/_search
{
"stored_fields": [
"title",
"date"
],
"query": {
"term": {
"city": "Beijing"
}
}
}

GET my_index2/_search
{
"stored_fields": "*",
"query": {
"term": {
"city": "Beijing"
}
}
}

GET my_index2/_search
{
"stored_fields": [],
"query": {
"term": {
"city": "Beijing"
}
}
}


GET developers/_search
{
"_source": false,
"query": {
"match": {
"city": "Beijing"
}
}
}

GET developers/_search
{
"_source": ["ski*", "name.fir*"],
"query": {
"match": {
"city": "Beijing"
}
}
}


GET developers/_search
{
"query": {
"match_all": {}
},
"_source": {
"includes": [ "sk*", "name" ],
"excludes": [ "name.secondname"]
}
}
GET developers/_search
{
"query": {
"match_all": {}
},
"script_fields": {
"2_times_age": {
"script": {
"source": """
doc['age'].value * 2
"""
}
},
"3_times_age": {
"script": {
"source": """
doc['age'].value * 3
"""
}
}
}
}
GET developers/_search
{
"query": {
"match_all": {}
},
"script_fields": {
"my_city": {
"script": {
"source": """
"I am living in " + params["_source"]["city"]
"""
}
}
}
}

PUT _template/logs_template
{
"index_patterns": "logsa-*",
"order": 1,
"settings": {
"number_of_shards": 4,
"number_of_replicas": 1
},
"mappings": {
"properties": {
"@timestamp": {
"type": "date"
}
}
}
}

PUT logsa-2019-03-01
GET logsa-2019-03-01

PUT _template/logs_template
{
"index_patterns": "logsa-*",
"order": 1,
"settings": {
"number_of_shards": 4,
"number_of_replicas": 1
},
"mappings": {
"properties": {
"@timestamp": {
"type": "date"
}
}
},
"aliases": {
"{index}-alias" : {}
}
}
PUT logsa-2019-04-01
//我们创建一个叫做 logs-2019-04-01 的index, 那么它同时生成了一个叫做 logs-2019-04-01-alias 的别名。我们可以通过如下的命令来检查：
GET logsa-2019-04-01-alias



PUT /_template/template_1
{
"index_patterns" : ["*"],
"order" : 0,
"settings" : {
"number_of_shards" : 1
},
"mappings" : {
"_source" : { "enabled" : false }
}
}

PUT /_template/template_2
{
"index_patterns" : ["te*"],
"order" : 1,
"settings" : {
"number_of_shards" : 1
},
"mappings" : {
"_source" : { "enabled" : true }
}
}

PUT test10

GET test10

PUT my_test_index
GET my_test_index

GET _template/logs_template
GET /_template/template_1,template_2
GET /_template/temp*
GET /_template
//我们可以使用如下的命令来检查一个 index template 是否存在：
HEAD _template/logs_template

DELETE _template/template_1
DELETE _template/template_2


PUT _component_template/component_template1
{
"template": {
"mappings": {
"properties": {
"@timestamp": {
"type": "date"
}
}
}
}
}

PUT _component_template/other_component_template
{
"template": {
"mappings": {
"properties": {
"ip_address": {
"type": "ip"
}
}
}
}
}

//在上面，我们定义了 component_template1 以及 other_component_template 两个组合模板。我们运用上面的两个 component template 来组合一个 index tempate。 这两个 component template 分别定义了一个 index template 的其中的一部分字段。我们使用如下的命令来创建一个新的 index template：

PUT _index_template/template_1
{
"index_patterns": ["te*", "bar*"],
"template": {
"settings": {
"number_of_shards": 1
},
"mappings": {
"_source": {
"enabled": false
},
"properties": {
"host_name": {
"type": "keyword"
},
"created_at": {
"type": "date",
"format": "EEE MMM dd HH:mm:ss Z yyyy"
}
}
},
"aliases": {
"mydata": { }
}
},
"priority": 200,
"composed_of": ["component_template1", "other_component_template"],
"version": 3,
"_meta": {
"description": "my custom"
}
}

PUT test2
GET test2

POST _bulk
{ "index" : { "_index" : "twitter", "_id": 1} }
{"user":"张三","message":"今儿天气不错啊，出去转转去","uid":2,"age":20,"city":"北京","province":"北京","country":"中国","address":"中国北京市海淀区","location":{"lat":"39.970718","lon":"116.325747"}, "DOB":"1980-12-01"}
{ "index" : { "_index" : "twitter", "_id": 2 }}
{"user":"老刘","message":"出发，下一站云南！","uid":3,"age":30,"city":"北京","province":"北京","country":"中国","address":"中国北京市东城区台基厂三条3号","location":{"lat":"39.904313","lon":"116.412754"}, "DOB":"1981-12-01"}
{ "index" : { "_index" : "twitter", "_id": 3} }
{"user":"李四","message":"happy birthday!","uid":4,"age":30,"city":"北京","province":"北京","country":"中国","address":"中国北京市东城区","location":{"lat":"39.893801","lon":"116.408986"}, "DOB":"1982-12-01"}
{ "index" : { "_index" : "twitter", "_id": 4} }
{"user":"老贾","message":"123,gogogo","uid":5,"age":35,"city":"北京","province":"北京","country":"中国","address":"中国北京市朝阳区建国门","location":{"lat":"39.718256","lon":"116.367910"}, "DOB":"1983-12-01"}
{ "index" : { "_index" : "twitter", "_id": 5} }
{"user":"老王","message":"Happy BirthDay My Friend!","uid":6,"age":50,"city":"北京","province":"北京","country":"中国","address":"中国北京市朝阳区国贸","location":{"lat":"39.918256","lon":"116.467910"}, "DOB":"1984-12-01"}
{ "index" : { "_index" : "twitter", "_id": 6} }
{"user":"老吴","message":"好友来了都今天我生日，好友来了,什么 birthday happy 就成!","uid":7,"age":90,"city":"上海","province":"上海","country":"中国","address":"中国上海市闵行区","location":{"lat":"31.175927","lon":"121.383328"}, "DOB":"1985-12-01"}

GET twitter/_search?q=user:张三
GET twitter/_search?q=张三

GET twitter/_search?df=user&q=张三
//http://localhost:9200/_search?q=user:%E5%BC%A0%E4%B8%89&pretty
GET twitter/_search?q=city:"北京"&sort=DOB:desc

GET twitter/_search?q=city:"北京"&sort=DOB:desc&_source=city,age,DOB

GET twitter/_search?q=city:"北京"&sort=DOB:desc&_source=city,age,DOB&size=2

GET twitter/_search?q=city:("北京" or "上海") &sort=DOB:desc&_source=city,age,DOB&size=2
GET twitter/_search?q=city:"北京" AND user:"张三

GET twitter/_search?q=NOT city:"上海"
GET twitter/_search?q=(age:20^5 OR city:"上海")
GET twitter/_search?q=张三

GET twitter/_search?q=age:[20 TO 30]






